package either where

type Either (A B: Type) {
  Left A,
  Right B,
}

def Either.bind (0 A B C: Type) (e: Either A B) (f: ∀ B -> (Either A C))
  : Either A C
  = (case e) (λ m => Either A C) (Either.Left A C) f

def Either.bindL (0 A B C: Type) (e: Either A B) (f: ∀ A -> (Either C B))
  : Either C B
  = (case e) (λ m => Either C B) f (Either.Right C B)

