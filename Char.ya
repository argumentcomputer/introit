package Char
  import Bool (Bool)
  import Bool as Bool
  import Is (Is)
  import Is as Is
  import U32 (U32)
where

def Char: Type = #Char

def fromU32: ∀ U32 -> Char = #Char.from_U32
def toU32: ∀ Char -> U32 = #Char.to_U32

def eql: ∀ (x y: Char) -> Bool = #Char.eql
def lte: ∀ (x y: Char) -> Bool = #Char.lte
def lth: ∀ (x y: Char) -> Bool = #Char.lth
def gte: ∀ (x y: Char) -> Bool = #Char.gte
def gth: ∀ (x y: Char) -> Bool = #Char.gth

def isAlphabetic: ∀ Char -> Bool = #Char.is_alphabetic
def isAlphanumeric: ∀ Char -> Bool = #Char.is_alphanumeric

def isAscii: ∀ Char -> Bool = #Char.is_ascii_alphabetic
def isAsciiAlphabetic: ∀ Char -> Bool = #Char.is_ascii_alphanumeric
def isAsciiControl: ∀ Char -> Bool = #Char.is_ascii_control

def isAsciiDigit: ∀ #Char -> #Bool = #Char.is_ascii_digit
def isAsciiGraphic: ∀ #Char -> #Bool = #Char.is_ascii_graphic
def isAsciiHexDigit: ∀ #Char -> #Bool = #Char.is_ascii_hexdigit
def isAsciiLowerCase: ∀ #Char -> #Bool = #Char.is_ascii_lowercase
def isAsciiPunctuation: ∀ #Char -> #Bool = #Char.is_ascii_punctuation
def isAsciiUpperCase: ∀ #Char -> #Bool = #Char.is_ascii_uppercase
def isAsciiWhitespace: ∀ #Char -> #Bool = #Char.is_ascii_whitespace
def isControl: ∀ #Char -> #Bool = #Char.is_control
def isDigit: ∀ #Char -> #Bool = #Char.is_digit
def isLowercase: ∀ #Char -> #Bool = #Char.is_lowercase
def isNumeric: ∀ #Char -> #Bool = #Char.is_numeric
def isUppercase: ∀ #Char -> #Bool = #Char.is_uppercase
def isWhitespace: ∀ #Char -> #Bool = #Char.is_whitespace
def lenUTF8: ∀ #Char -> #Nat = #Char.len_utf8
def lenUTF16: ∀ #Char -> #Nat = #Char.len_utf16
def toAsciiLowercase: ∀ #Char -> #Bool = #Char.to_ascii_lowercase
def toAsciiUppercase: ∀ #Char -> #Bool = #Char.to_ascii_uppercase
def toLowercase: ∀ #Char -> #Bool = #Char.to_lowercase
def toUppercase: ∀ #Char -> #Bool = #Char.to_uppercase
